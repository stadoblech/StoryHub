//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuickTestProject.MyService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyService.IGetSimpleDataService")]
    public interface IGetSimpleDataService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetSimpleDataService/GetUser", ReplyAction="http://tempuri.org/IGetSimpleDataService/GetUserResponse")]
        StoryHub.DAL.Model.User GetUser(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetSimpleDataService/GetUser", ReplyAction="http://tempuri.org/IGetSimpleDataService/GetUserResponse")]
        System.Threading.Tasks.Task<StoryHub.DAL.Model.User> GetUserAsync(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetSimpleDataService/GetUserByMethod", ReplyAction="http://tempuri.org/IGetSimpleDataService/GetUserByMethodResponse")]
        StoryHub.DAL.Model.User GetUserByMethod(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetSimpleDataService/GetUserByMethod", ReplyAction="http://tempuri.org/IGetSimpleDataService/GetUserByMethodResponse")]
        System.Threading.Tasks.Task<StoryHub.DAL.Model.User> GetUserByMethodAsync(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetSimpleDataService/ActivationTest", ReplyAction="http://tempuri.org/IGetSimpleDataService/ActivationTestResponse")]
        string ActivationTest();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetSimpleDataService/ActivationTest", ReplyAction="http://tempuri.org/IGetSimpleDataService/ActivationTestResponse")]
        System.Threading.Tasks.Task<string> ActivationTestAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetSimpleDataService/WebMethodTest", ReplyAction="http://tempuri.org/IGetSimpleDataService/WebMethodTestResponse")]
        string WebMethodTest();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetSimpleDataService/WebMethodTest", ReplyAction="http://tempuri.org/IGetSimpleDataService/WebMethodTestResponse")]
        System.Threading.Tasks.Task<string> WebMethodTestAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGetSimpleDataServiceChannel : QuickTestProject.MyService.IGetSimpleDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSimpleDataServiceClient : System.ServiceModel.ClientBase<QuickTestProject.MyService.IGetSimpleDataService>, QuickTestProject.MyService.IGetSimpleDataService {
        
        public GetSimpleDataServiceClient() {
        }
        
        public GetSimpleDataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GetSimpleDataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GetSimpleDataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GetSimpleDataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public StoryHub.DAL.Model.User GetUser(string ID) {
            return base.Channel.GetUser(ID);
        }
        
        public System.Threading.Tasks.Task<StoryHub.DAL.Model.User> GetUserAsync(string ID) {
            return base.Channel.GetUserAsync(ID);
        }
        
        public StoryHub.DAL.Model.User GetUserByMethod(string ID) {
            return base.Channel.GetUserByMethod(ID);
        }
        
        public System.Threading.Tasks.Task<StoryHub.DAL.Model.User> GetUserByMethodAsync(string ID) {
            return base.Channel.GetUserByMethodAsync(ID);
        }
        
        public string ActivationTest() {
            return base.Channel.ActivationTest();
        }
        
        public System.Threading.Tasks.Task<string> ActivationTestAsync() {
            return base.Channel.ActivationTestAsync();
        }
        
        public string WebMethodTest() {
            return base.Channel.WebMethodTest();
        }
        
        public System.Threading.Tasks.Task<string> WebMethodTestAsync() {
            return base.Channel.WebMethodTestAsync();
        }
    }
}
